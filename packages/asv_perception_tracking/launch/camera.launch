<?xml version="1.0" encoding="utf-8"?>
<launch>
    <arg name="pkg_name" value="asv_perception_tracking"/>
    <arg name="obstacle_topic" />

    <!-- obstacle_topic: /camera1/projection/obstacles-->
    <!-- obstacle_topic: /ir_camera1/projection/obstacles-->
    <!-- obstacle_topic: /ir_camera2/projection/obstacles-->

    <group ns="tracking">

        <!-- 
            (debug) visualization of detected obstacles : Node name= /XXX/tracking/detection
            original duration 0.4
        -->
        <node name="detection" pkg="$(arg pkg_name)" type="visualization.py" output="screen">

            <remap from="~input" to="$(arg obstacle_topic)" />

            <rosparam>
                marker_duration_secs: 1.0
            </rosparam>
        </node>

        <!-- 
            classified obstacle tracking : Node name= /XXX/tracking/classified
            original age 4
            original min hits 4
        -->
        <node name="classified" pkg="$(arg pkg_name)" type="tracking_node.py" output="screen">
            
            <remap from="~input" to="$(arg obstacle_topic)" />

            <rosparam>
                max_age: 5
                min_hits: 3
                measurement_uncertainty: 10.
                estimate_velocity: False
                tf_frame: 'odom'

                cost_fn: 'perspective'
                cost_fn_max: .4
            </rosparam>
        </node>

        <!-- tracking_node outputs /classified/obstacles which is given to visualization.py below as input -->

        <!-- 
            unclassified obstacle tracking  (unstable!)
        -->
        <!-- 
        <node name="tracking_unclassified" pkg="$(arg pkg_name)" type="tracking.py" output="screen">
            
            <remap from="~input" to="/camera0/extraction/obstacles" />

            <rosparam>
                max_age: 6
                min_hits: 4
                tf_frame: 'odom'
            </rosparam>
        </node>
        -->

        <!-- 
            tracked obstacle visualization
            tracking_node outputs /classified/obstacles which is given to visualization.py below as input
            original duration 0.15
        -->
        <node name="visualization" pkg="$(arg pkg_name)" type="visualization.py" output="screen">

            <remap from="~input" to="classified/obstacles" />

            <rosparam>
                marker_duration_secs: 1.0
            </rosparam>
        </node>

    </group>
</launch>

